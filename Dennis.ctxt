#BlueJ class context
comment0.target=Dennis
comment0.text=\r\n\ Dennis\ Character.\r\n\ \r\n\ @author\ Kevin\r\n\ @version\ 10/30/2015\r\n
comment1.params=
comment1.target=Dennis()
comment10.params=
comment10.target=void\ reset()
comment10.text=\r\n\ Multi-Purpose\ Method\:\r\n\ Resets\ character\ back\ to\ breathing\ animation\ if\ no\ actions\ are\ issued.\r\n\ Resets\ the\ grace\ period.\r\n\ Resets\ the\ hit\ count\ after\ a\ period\ of\ time.\ \r\n
comment11.params=
comment11.target=void\ control()
comment11.text=\r\n\ Movement\ Keys\r\n
comment12.params=
comment12.target=void\ jump()
comment12.text=\r\n\ Makes\ the\ character\ jump,\ ground\ level\ specfies\ where\ the\ character\ stops\ falling.\r\n
comment13.params=
comment13.target=void\ basic()
comment13.text=\r\n\ Basic\ Attack\:\ Dennis\ performs\ a\ basic\ high\ kick.\r\n
comment14.params=
comment14.target=void\ defence()
comment14.text=\r\n\ Defence\:\ Dennis\ concentrates\ greatly\ in\ order\ to\ counter\ the\ next\ attack\ thrown\ at\ him.\r\n
comment15.params=
comment15.target=void\ aRightAttack()
comment15.text=\r\n\ Right\ Attack\:\ Dennis\ fires\ a\ blast\ of\ energy\ to\ the\ right.\r\n
comment16.params=
comment16.target=void\ aLeftAttack()
comment16.text=\r\n\ Left\ Attack\:\ Dennis\ fires\ a\ blast\ of\ energy\ to\ the\ left.\r\n
comment17.params=
comment17.target=void\ aUpAttack()
comment17.text=\r\n\ Up\ Attack\:\ Dennis\ spins\ at\ a\ great\ upSpeed\ that\ allows\ him\ to\ levitate\ above\ the\ air\ and\ knock\ opponents\ out\ of\ his\ way.\r\n
comment18.params=
comment18.target=void\ aDownAttack()
comment18.text=\r\n\ Down\ Attack\:\ Dennis\ unleashes\ a\ kick\ strafe.\r\n
comment19.params=
comment19.target=void\ disableAll()
comment19.text=\r\n\ Disables\ all\ commands\ issued\ to\ before\ this\ method\ is\ called\ and\ nullifies\ any\ current\ commands\ issued.\r\n
comment2.params=
comment2.target=void\ act()
comment2.text=\r\n\ Act\ -\ do\ whatever\ the\ Dennis\ wants\ to\ do.\ This\ method\ is\ called\ whenever\r\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\r\n
comment20.params=
comment20.target=void\ hurt()
comment20.text=\r\n\ Character\ stumples\ and\ loses\ control\ for\ a\ short\ period\ of\ time\ if\ hit.\r\n
comment21.params=
comment21.target=void\ hurt_m()
comment21.text=\r\n\ Character\ stumples\ and\ loses\ control\ for\ a\ short\ period\ of\ time\ if\ hit.\ (Mirrored\ Version)\r\n
comment22.params=
comment22.target=void\ fall()
comment22.text=\r\n\ Character\ falls\ over\ during\ which,\ he\ cannot\ attack\ or\ be\ attacked.\r\n
comment23.params=
comment23.target=void\ fall_m()
comment23.text=\r\n\ Character\ falls\ over\ during\ which,\ he\ cannot\ attack\ or\ be\ attacked.\ (Mirrored\ Version)\r\n
comment24.params=
comment24.target=void\ breathe()
comment24.text=\r\n\ Normal\ breathing\ animation\r\n
comment25.params=
comment25.target=void\ breathe_m()
comment25.text=\r\n\ Normal\ breathing\ animation\ (Mirrored)\r\n
comment26.params=
comment26.target=void\ run()
comment26.text=\r\n\ Running\ Animation\r\n
comment27.params=
comment27.target=void\ run_m()
comment27.text=\r\n\ Running\ Animation\ (Mirrored)\r\n
comment28.params=
comment28.target=void\ reference()
comment28.text=\r\n\ Reference\ format\ of\ moves,\ not\ called,\ pseudo-code\ example.\r\n
comment29.params=
comment29.target=void\ a()
comment29.text=\r\n\ Attack\ Animation\r\n
comment3.params=
comment3.target=void\ checkDead()
comment3.text=\r\n\ If\ hit\ points\ is\ less\ than\ zero,\ turn\ off\ all\ the\ character's\ controls\ and\ set\ the\ is\ dead\ image\r\n
comment30.params=
comment30.target=void\ a_m()
comment30.text=\r\n\ Attack\ Animation\ (Mirrored)\r\n
comment31.params=
comment31.target=void\ d()
comment31.text=\r\n\ Defence\ Animation\r\n
comment32.params=
comment32.target=void\ d_m()
comment32.text=\r\n\ Defence\ Animation\ (Mirrored)\r\n
comment33.params=
comment33.target=void\ aRight()
comment33.text=\r\n\ A\ -\ Right\ Attack\ Animation\r\n
comment34.params=
comment34.target=void\ aLeft()
comment34.text=\r\n\ A\ -\ Left\ Attack\ Animation\r\n
comment35.params=
comment35.target=void\ aDown()
comment35.text=\r\n\ A\ -\ Down\ Attack\ Animation\r\n
comment36.params=
comment36.target=void\ aDown_m()
comment36.text=\r\n\ A\ -\ Down\ Attack\ Animation\ (Mirrored)\r\n
comment37.params=
comment37.target=void\ aUp()
comment37.text=\r\n\ A\ -\ Up\ Attack\ \r\n
comment38.params=
comment38.target=void\ aUp_m()
comment38.text=\r\n\ A\ -\ Up\ Attack\ (Mirrored)\r\n
comment4.params=
comment4.target=void\ loseHealth()
comment4.text=\r\n\ Loses\ health\ whenever\ this\ method\ is\ called.\r\n
comment5.params=
comment5.target=void\ loseMana()
comment5.text=\r\n\ Loses\ 15\ mana\ whenever\ this\ method\ is\ called.\r\n
comment6.params=
comment6.target=void\ gainMana()
comment6.text=\r\n\ Allows\ the\ character\ to\ regenerate\ mana\ over\ time.\r\n
comment7.params=
comment7.target=void\ checkHit()
comment7.text=\r\n\ Checks\ if\ character\ is\ hit.\ Character\ is\ considered\ hit\ if\ he\ is\ not\ in\ a\ grace\ or\ defence\ state\ and\ if\ the\ other\ character\ is\ in\ a\ hostile\ state\ and\ touching.\r\n
comment8.params=
comment8.target=void\ checkKnockback()
comment8.text=\r\n\ Checks\ if\ an\ knockback\ ability\ is\ used,\ if\ so\ moves\ the\ character\ backwards/forwards\ two\ pixels.\r\n
comment9.params=
comment9.target=void\ checkHitCount()
comment9.text=\r\n\ If\ hit\ n\ or\ more\ times,\ character\ falls\ down\ otherwise\ he\ is\ just\ hurt.\r\n
numComments=39
